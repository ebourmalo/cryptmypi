#!/bin/bash
set -e

# REFERENCE:
#   https://www.quora.com/Debian-GNU-Linux-How-can-I-add-an-SSH-active-client-in-the-initramfs-image-to-get-data-remotely
#   https://superuser.com/questions/1289564/how-to-make-port-forwarding-in-initramfs-stage/1289835#1289835
#   https://www.ullright.org/ullWiki/show/initramfs-tools
#   https://github.com/ceremcem/unlock-luks-partition/blob/master/reverse-tunnel-setup.md
#
# Regular SSH tunnel:
#   ssh -R 0:localhost:22 tunnel.us.ngrok.com tcp 22
# SSH tunnel with reserved address:
#   ssh -R 1.tcp.ngrok.io:24313:localhost:22 tunnel.us.ngrok.com tcp
# See official docs: https://ngrok.com/docs#ssh-gateway

echo_debug "Attempting to create ngrok tunnel in INITRAMFS..."

if [ -z "${_NGROK_RESERVED_TCP_ADDRESS}" ]; then
    echo_warn "SKIPPING ngrok setup: '_NGROK_RESERVED_TCP_ADDRESS' variable was not set."
else

    # echo_debug "Assuring box keyfile exists"
    # assure_box_sshkey "${_HOSTNAME}"

    echo_debug "Creating initramfs script ngrok_tunnel"
    cat <<EOT > ${CHROOTDIR}/etc/initramfs-tools/scripts/local-top/ngrok_tunnel
#!/bin/sh

PREREQ=""
prereqs()
{
    echo "\$PREREQ"
}

case \$1 in
prereqs)
    prereqs
    exit 0
    ;;
esac

. /scripts/functions

# wait for network and dropbear to be ready
sleep 30
log_begin_msg "Starting Ngrok tunnel ..."

/sbin/ifconfig lo up
/etc/ssh_tunnel.sh &
EOT
    chmod +x "${CHROOTDIR}/etc/initramfs-tools/scripts/local-top/ngrok_tunnel"


    echo_debug "Creating ngrok_tunnel.sh connection loop"
    cat <<EOT > ${CHROOTDIR}/etc/initramfs-tools/ssh_tunnel.sh
# !/bin/sh

while test -f /etc/dropbear-id_rsa
do
    # 2222 is the port we opened with dropbear
    /bin/dbclient -i /etc/dropbear-id_rsa -R ${_NGROK_RESERVED_TCP_ADDRESS}:localhost:2222 -y -y -f -o ExitOnForwardFailure=yes ${_NGROK_SERVICE_DOMAIN} tcp
    test -f /etc/dropbear-id_rsa && sleep 60
    for i in \$(ps aux | grep dbclient | grep -v 'grep' | awk '{print \$1}'); do kill -9 \$i; done
done
EOT
    chmod +x "${CHROOTDIR}/etc/initramfs-tools/ssh_tunnel.sh"


    echo_debug "Creating initramfs hook ngrok_tunnel"
    cat <<EOT > ${CHROOTDIR}/etc/initramfs-tools/hooks/ngrok_tunnel
# !/bin/sh
set -e

PREREQ=""
prereqs()
{
    echo "\${PREREQ}"
}

case "\${1}" in
    prereqs)
        prereqs
        exit 0
        ;;
esac

. /usr/share/initramfs-tools/hook-functions


copy_file config /etc/initramfs-tools/ssh_tunnel.sh /etc/ssh_tunnel.sh
copy_file config /etc/initramfs-tools/dropbear-id_rsa /etc/dropbear-id_rsa
copy_exec /usr/bin/dbclient /bin


# For DNS functionality
test -d /lib/aarch64-linux-gnu && LIB=/lib/aarch64-linux-gnu || LIB=/lib/aarch32-linux-gnu
mkdir -p "\$DESTDIR/\$LIB"
cp \$LIB/libnss_dns.so.2 \$LIB/libnss_files.so.2 \$LIB/libresolv.so.2 \$LIB/libc.so.6 "\${DESTDIR}/\$LIB"
echo nameserver ${_DNS1} >  "\${DESTDIR}/etc/resolv.conf"
echo nameserver ${_DNS2} >> "\${DESTDIR}/etc/resolv.conf"
EOT
    chmod +x "${CHROOTDIR}/etc/initramfs-tools/hooks/ngrok_tunnel"

    echo_debug "Converting id_rsa to a dropbear key dropbear-id_rsa"
    cp "${_KEYFILE}" "${CHROOTDIR}/etc/initramfs-tools/id_rsa.tmp"
    ssh-keygen -m PEM -p -f "${CHROOTDIR}/etc/initramfs-tools/id_rsa.tmp" -q -N ""
    chroot ${CHROOTDIR} /bin/bash -c "/usr/lib/dropbear/dropbearconvert openssh dropbear /etc/initramfs-tools/id_rsa.tmp /etc/initramfs-tools/dropbear-id_rsa"
    rm "${CHROOTDIR}/etc/initramfs-tools/id_rsa.tmp"


    echo_debug "Creating initramfs script kill_ngrok"
    cat <<EOT > ${CHROOTDIR}/etc/initramfs-tools/scripts/local-bottom/kill_ngrok
#!/bin/sh

PREREQ=""
prereqs()
{
    echo "\$PREREQ"
}

case \$1 in
prereqs)
    prereqs
    exit 0
    ;;
esac

echo "Killing ngrok so the system takes over later."

rm /etc/dropbear-id_rsa
for i in \$(ps aux | grep 'ssh_tunnel.sh' | grep -v 'grep' | awk '{print \$1}'); do kill -9 \$i; done
for i in \$(ps aux | grep 'dbclient' | grep -v 'grep' | awk '{print \$1}'); do kill -9 \$i; done
EOT
    chmod +x "${CHROOTDIR}/etc/initramfs-tools/scripts/local-bottom/kill_ngrok"

    _NGROK_RESERVED_DOMAIN=${_NGROK_RESERVED_TCP_ADDRESS%%:*}
    _NGROK_RESERVED_PORT=${_NGROK_RESERVED_TCP_ADDRESS##*:}

    echo_debug " ... ngrok INITRAMFS SSH tunnel set up! To connect, use:"
    echo_debug ""
    echo_debug "   ssh root@${_NGROK_RESERVED_DOMAIN} -p ${_NGROK_RESERVED_PORT}"
    echo_debug ""
fi
